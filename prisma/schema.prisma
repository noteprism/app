// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  passwordHash  String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  theme         UserTheme?
}

model UserTheme {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  hue       Float
  chroma    Float
  tone      Float
  darkMode  Boolean  @default(false)
  updatedAt DateTime @updatedAt
}

model HealthCheck {
  id          String    @id @default(cuid())
  service     String    // "server" or "database"
  status      String    // "operational" or "error"
  latency     Float     // Response time in milliseconds
  message     String?   // Optional error or status message
  timestamp   DateTime  @default(now())

  @@index([service, timestamp])
}

model UptimeMetrics {
  id          String    @id @default(cuid())
  service     String    // "server" or "database"
  period      String    // "5m" or "15m" or "30m"
  uptime      Float     // Percentage of uptime
  updatedAt   DateTime  @default(now())

  @@unique([service, period])
}
